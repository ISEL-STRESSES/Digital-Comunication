Index: S1/Python/LZ77/textlz77.txt
===================================================================
diff --git a/S1/Python/LZ77/textlz77.txt b/S1/Python/LZ77/textlz77.txt
new file mode 100644
--- /dev/null	
+++ b/S1/Python/LZ77/textlz77.txt	
@@ -0,0 +1,1 @@
+ABCABCCBACBA
\ No newline at end of file
Index: S1/Python/LZ77/lz77.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>def findStr(dic, cen):\r\n\r\n    if cen in dic:\r\n        for n in range(len(dic),0,-1):\r\n            if cen == dic[n]:\r\n                return (1,1,n)\r\n    return None\r\n\r\n\r\ndef lz77tokenizer(str):\r\n    dic = \"\"\r\n    ret = []\r\n    for n in range(0,len(str)):\r\n        if findStr(dic,str[n]) is not None:\r\n            dic += str[n]\r\n            ret += [(0,n,str[n])]\r\n    return ret\r\n\r\n\r\nif __name__ == '__main__':\r\n    print(findStr(\"bbva\",'a'))\r\n    #print(lz77tokenizer(\"aa\"))\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/S1/Python/LZ77/lz77.py b/S1/Python/LZ77/lz77.py
--- a/S1/Python/LZ77/lz77.py	
+++ b/S1/Python/LZ77/lz77.py	
@@ -1,25 +1,52 @@
-def findStr(dic, cen):
+
+
+
+def lz77_tokenizer(filename: str, window_size: int, buffer_size: int):
+    input_txt = open(filename).read()
+    output_file = open("tok" + filename, 'w')
+    input_idx = 0
+    dictionary = ""
+    #if len(input) > buffer_size
+    lab = input_txt[0:buffer_size]
+    while input_idx < len(input_txt):
+        print("lab = " + lab + "   dic = " + dictionary + "   all=" + input_txt)
+        pos, buf, inov = find_substring(dictionary, lab)
+        print(find_substring(dictionary, lab))
+
+        dictionary += input_txt[input_idx-pos:input_idx+1]
+        input_idx += buf+1
 
-    if cen in dic:
-        for n in range(len(dic),0,-1):
-            if cen == dic[n]:
-                return (1,1,n)
-    return None
+        lab = input_txt[input_idx:buffer_size+input_idx+1]
 
 
-def lz77tokenizer(str):
-    dic = ""
-    ret = []
-    for n in range(0,len(str)):
-        if findStr(dic,str[n]) is not None:
-            dic += str[n]
-            ret += [(0,n,str[n])]
-    return ret
+
+def find_substring(dict, lab):
+    if len(dict) == 0:
+        return 0, 0, lab[0]
+    if len(lab) == 0:
+        return -1, -1, ""
+    best_length = 0
+    offset = 0
+    buf = dict + lab
+    pointer = len(dict)
+    for i in range(0, len(dict)):
+        idx = len(dict)
+        length = 0
+        while buf[i + length] == buf[pointer + length]:
+            length = length + 1
+            if pointer + length == len(buf):
+                length = length - 1
+                break
+            if i + length >= pointer:
+                break
+        if length > best_length:
+            best_length = length
+            offset = idx - i
+        idx -= 1
+    return offset, best_length, buf[pointer + best_length]
+
 
 
 if __name__ == '__main__':
-    print(findStr("bbva",'a'))
-    #print(lz77tokenizer("aa"))
-
-
-
+    #print(find_substring("bbva", 'a'))
+    print(lz77_tokenizer("textlz77.txt", 10, 5))
diff --git a/S1/Python/LZ77/toktextlz77.txt b/S1/Python/LZ77/toktextlz77.txt
new file mode 100644
